{"ast":null,"code":"const {\n  constants\n} = require(\"ethers\");\n\nconst Operation = require(\"../../enums/gelato/Operation\");\n\nconst DataFlow = require(\"../../enums/gelato/DataFlow\");\n\nclass Action {\n  constructor({\n    addr,\n    data,\n    operation,\n    dataFlow,\n    value,\n    termsOkCheck\n  }) {\n    if (typeof operation === \"string\") operation = parseInt(operation);\n    if (typeof dataFlow === \"string\") dataFlow = parseInt(dataFlow);\n    if (typeof value === \"string\") value = parseInt(value);\n    if (!addr) throw new Error(\"\\nAction: no addr passed to constructor\\n\");\n    if (operation === undefined) throw new Error(\"\\nAction: no operation passed to constructor\\n\");\n\n    if (operation !== Operation.Call && operation !== Operation.Delegatecall) {\n      throw new Error(\"\\nAction: pass 'Operation.Call' or 'Operation.Delegatecall', you passed:\", operation, \"\\n CASE SENSITIVE => .call or .delegatecall do not work!\", \"\\n\");\n    }\n\n    if (operation == Operation.Delegatecall && value && value.toString() !== \"0\") {\n      throw new Error(\"\\n Action: Delegatecalls must have 0 in the value field\");\n    }\n\n    if (dataFlow && Object.values(DataFlow).indexOf(dataFlow) === -1) throw new Error(\"\\n Action: Invalid DataFlow value \\n\");\n    const trueOrFalse = [true, false];\n\n    if (termsOkCheck !== undefined && !trueOrFalse.includes(termsOkCheck)) {\n      throw new Error(\"\\nAction.termsOkCheck: pass true or false, you passed:\", termsOkCheck, \"\\n\");\n    }\n\n    this.addr = addr;\n    this.data = data ? data : constants.HashZero;\n    this.operation = operation;\n    this.dataFlow = dataFlow !== undefined ? dataFlow : DataFlow.None;\n    this.value = value ? value : constants.Zero;\n    this.termsOkCheck = termsOkCheck === true ? termsOkCheck : false;\n  }\n\n}\n\nmodule.exports = Action;","map":{"version":3,"sources":["/Users/Hilmar/code/integrations/krystal/gelato-krystal/node_modules/@gelatonetwork/core/src/classes/gelato/Action.js"],"names":["constants","require","Operation","DataFlow","Action","constructor","addr","data","operation","dataFlow","value","termsOkCheck","parseInt","Error","undefined","Call","Delegatecall","toString","Object","values","indexOf","trueOrFalse","includes","HashZero","None","Zero","module","exports"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAgBC,OAAO,CAAC,QAAD,CAA7B;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,8BAAD,CAAzB;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,6BAAD,CAAxB;;AAEA,MAAMG,MAAN,CAAa;AACXC,EAAAA,WAAW,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,SAAd;AAAyBC,IAAAA,QAAzB;AAAmCC,IAAAA,KAAnC;AAA0CC,IAAAA;AAA1C,GAAD,EAA2D;AACpE,QAAI,OAAOH,SAAP,KAAqB,QAAzB,EAAmCA,SAAS,GAAGI,QAAQ,CAACJ,SAAD,CAApB;AACnC,QAAI,OAAOC,QAAP,KAAoB,QAAxB,EAAkCA,QAAQ,GAAGG,QAAQ,CAACH,QAAD,CAAnB;AAClC,QAAI,OAAOC,KAAP,KAAiB,QAArB,EAA+BA,KAAK,GAAGE,QAAQ,CAACF,KAAD,CAAhB;AAE/B,QAAI,CAACJ,IAAL,EAAW,MAAM,IAAIO,KAAJ,CAAU,2CAAV,CAAN;AACX,QAAIL,SAAS,KAAKM,SAAlB,EACE,MAAM,IAAID,KAAJ,CAAU,gDAAV,CAAN;;AAEF,QAAIL,SAAS,KAAKN,SAAS,CAACa,IAAxB,IAAgCP,SAAS,KAAKN,SAAS,CAACc,YAA5D,EAA0E;AACxE,YAAM,IAAIH,KAAJ,CACJ,0EADI,EAEJL,SAFI,EAGJ,0DAHI,EAIJ,IAJI,CAAN;AAMD;;AACD,QACEA,SAAS,IAAIN,SAAS,CAACc,YAAvB,IACAN,KADA,IAEAA,KAAK,CAACO,QAAN,OAAqB,GAHvB,EAIE;AACA,YAAM,IAAIJ,KAAJ,CACJ,yDADI,CAAN;AAGD;;AACD,QAAIJ,QAAQ,IAAIS,MAAM,CAACC,MAAP,CAAchB,QAAd,EAAwBiB,OAAxB,CAAgCX,QAAhC,MAA8C,CAAC,CAA/D,EACE,MAAM,IAAII,KAAJ,CAAU,sCAAV,CAAN;AACF,UAAMQ,WAAW,GAAG,CAAC,IAAD,EAAO,KAAP,CAApB;;AACA,QAAIV,YAAY,KAAKG,SAAjB,IAA8B,CAACO,WAAW,CAACC,QAAZ,CAAqBX,YAArB,CAAnC,EAAuE;AACrE,YAAM,IAAIE,KAAJ,CACJ,wDADI,EAEJF,YAFI,EAGJ,IAHI,CAAN;AAKD;;AAED,SAAKL,IAAL,GAAYA,IAAZ;AACA,SAAKC,IAAL,GAAYA,IAAI,GAAGA,IAAH,GAAUP,SAAS,CAACuB,QAApC;AACA,SAAKf,SAAL,GAAiBA,SAAjB;AACA,SAAKC,QAAL,GAAgBA,QAAQ,KAAKK,SAAb,GAAyBL,QAAzB,GAAoCN,QAAQ,CAACqB,IAA7D;AACA,SAAKd,KAAL,GAAaA,KAAK,GAAGA,KAAH,GAAWV,SAAS,CAACyB,IAAvC;AACA,SAAKd,YAAL,GAAoBA,YAAY,KAAK,IAAjB,GAAwBA,YAAxB,GAAuC,KAA3D;AACD;;AA5CU;;AA+Cbe,MAAM,CAACC,OAAP,GAAiBvB,MAAjB","sourcesContent":["const { constants } = require(\"ethers\");\nconst Operation = require(\"../../enums/gelato/Operation\");\nconst DataFlow = require(\"../../enums/gelato/DataFlow\");\n\nclass Action {\n  constructor({ addr, data, operation, dataFlow, value, termsOkCheck }) {\n    if (typeof operation === \"string\") operation = parseInt(operation);\n    if (typeof dataFlow === \"string\") dataFlow = parseInt(dataFlow);\n    if (typeof value === \"string\") value = parseInt(value);\n\n    if (!addr) throw new Error(\"\\nAction: no addr passed to constructor\\n\");\n    if (operation === undefined)\n      throw new Error(\"\\nAction: no operation passed to constructor\\n\");\n\n    if (operation !== Operation.Call && operation !== Operation.Delegatecall) {\n      throw new Error(\n        \"\\nAction: pass 'Operation.Call' or 'Operation.Delegatecall', you passed:\",\n        operation,\n        \"\\n CASE SENSITIVE => .call or .delegatecall do not work!\",\n        \"\\n\"\n      );\n    }\n    if (\n      operation == Operation.Delegatecall &&\n      value &&\n      value.toString() !== \"0\"\n    ) {\n      throw new Error(\n        \"\\n Action: Delegatecalls must have 0 in the value field\"\n      );\n    }\n    if (dataFlow && Object.values(DataFlow).indexOf(dataFlow) === -1)\n      throw new Error(\"\\n Action: Invalid DataFlow value \\n\");\n    const trueOrFalse = [true, false];\n    if (termsOkCheck !== undefined && !trueOrFalse.includes(termsOkCheck)) {\n      throw new Error(\n        \"\\nAction.termsOkCheck: pass true or false, you passed:\",\n        termsOkCheck,\n        \"\\n\"\n      );\n    }\n\n    this.addr = addr;\n    this.data = data ? data : constants.HashZero;\n    this.operation = operation;\n    this.dataFlow = dataFlow !== undefined ? dataFlow : DataFlow.None;\n    this.value = value ? value : constants.Zero;\n    this.termsOkCheck = termsOkCheck === true ? termsOkCheck : false;\n  }\n}\n\nmodule.exports = Action;\n"]},"metadata":{},"sourceType":"script"}