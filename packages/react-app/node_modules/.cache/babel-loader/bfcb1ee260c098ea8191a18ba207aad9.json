{"ast":null,"code":"import { gql } from \"apollo-boost\";\nconst GET_TASK_RECEIPT_WRAPPERS = gql`\n  query taskReceiptWrapper($skip: Int, $proxyAddress: String!) {\n    taskReceiptWrappers(\n      # where: { user: $proxyAddress }\n      first: 100\n      skip: $skip\n      orderBy: id\n      orderDirection: desc\n    ) {\n      id\n      taskReceipt {\n        id\n        userProxy\n        provider {\n          addr\n          module\n        }\n        index\n        tasks {\n          conditions {\n            inst\n            data\n          }\n          actions {\n            addr\n            data\n            operation\n            dataFlow\n            value\n            termsOkCheck\n          }\n          selfProviderGasLimit\n          selfProviderGasPriceCeil\n        }\n        expiryDate\n        cycleId\n        submissionsLeft\n      }\n      user\n      submissionHash\n      status\n      submissionDate\n      executionDate\n      executionHash\n      selfProvided\n    }\n  }\n`;\nexport default GET_TASK_RECEIPT_WRAPPERS;","map":{"version":3,"sources":["/Users/Hilmar/code/integrations/krystal/gelato-krystal/packages/react-app/src/graphql/gelato.js"],"names":["gql","GET_TASK_RECEIPT_WRAPPERS"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AAEA,MAAMC,yBAAyB,GAAGD,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA/CA;AAiDA,eAAeC,yBAAf","sourcesContent":["import { gql } from \"apollo-boost\";\n\nconst GET_TASK_RECEIPT_WRAPPERS = gql`\n  query taskReceiptWrapper($skip: Int, $proxyAddress: String!) {\n    taskReceiptWrappers(\n      # where: { user: $proxyAddress }\n      first: 100\n      skip: $skip\n      orderBy: id\n      orderDirection: desc\n    ) {\n      id\n      taskReceipt {\n        id\n        userProxy\n        provider {\n          addr\n          module\n        }\n        index\n        tasks {\n          conditions {\n            inst\n            data\n          }\n          actions {\n            addr\n            data\n            operation\n            dataFlow\n            value\n            termsOkCheck\n          }\n          selfProviderGasLimit\n          selfProviderGasPriceCeil\n        }\n        expiryDate\n        cycleId\n        submissionsLeft\n      }\n      user\n      submissionHash\n      status\n      submissionDate\n      executionDate\n      executionHash\n      selfProvided\n    }\n  }\n`;\n\nexport default GET_TASK_RECEIPT_WRAPPERS;\n"]},"metadata":{},"sourceType":"module"}