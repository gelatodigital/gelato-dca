{"ast":null,"code":"// TaskSpec\nclass TaskSpec {\n  constructor({\n    conditions,\n    actions,\n    gasPriceCeil\n  }) {\n    if (conditions && (!Array.isArray(conditions) || !conditions.length)) throw new Error(\"\\nTaskSpec: optional conditions must be non-empty Array\\n\");\n    if (!actions || !Array.isArray(actions) || !actions.length) throw new Error(\"\\nTaskSpec: actions must be non-empty Array\\n\");\n    if (gasPriceCeil === undefined) throw new Error(\"\\n TaskSpec: no gasPriceCeil passed to constructor \\n \");\n    this.conditions = conditions ? conditions : [];\n    this.actions = actions;\n    this.gasPriceCeil = gasPriceCeil;\n  }\n\n}\n\nmodule.exports = TaskSpec;","map":{"version":3,"sources":["/Users/Hilmar/code/integrations/krystal/gelato-krystal/node_modules/@gelatonetwork/core/src/classes/gelato/TaskSpec.js"],"names":["TaskSpec","constructor","conditions","actions","gasPriceCeil","Array","isArray","length","Error","undefined","module","exports"],"mappings":"AAAA;AACA,MAAMA,QAAN,CAAe;AACbC,EAAAA,WAAW,CAAC;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA;AAAvB,GAAD,EAAwC;AACjD,QAAIF,UAAU,KAAK,CAACG,KAAK,CAACC,OAAN,CAAcJ,UAAd,CAAD,IAA8B,CAACA,UAAU,CAACK,MAA/C,CAAd,EACE,MAAM,IAAIC,KAAJ,CACJ,2DADI,CAAN;AAGF,QAAI,CAACL,OAAD,IAAY,CAACE,KAAK,CAACC,OAAN,CAAcH,OAAd,CAAb,IAAuC,CAACA,OAAO,CAACI,MAApD,EACE,MAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;AACF,QAAIJ,YAAY,KAAKK,SAArB,EACE,MAAM,IAAID,KAAJ,CAAU,wDAAV,CAAN;AAEF,SAAKN,UAAL,GAAkBA,UAAU,GAAGA,UAAH,GAAgB,EAA5C;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACD;;AAdY;;AAiBfM,MAAM,CAACC,OAAP,GAAiBX,QAAjB","sourcesContent":["// TaskSpec\nclass TaskSpec {\n  constructor({ conditions, actions, gasPriceCeil }) {\n    if (conditions && (!Array.isArray(conditions) || !conditions.length))\n      throw new Error(\n        \"\\nTaskSpec: optional conditions must be non-empty Array\\n\"\n      );\n    if (!actions || !Array.isArray(actions) || !actions.length)\n      throw new Error(\"\\nTaskSpec: actions must be non-empty Array\\n\");\n    if (gasPriceCeil === undefined)\n      throw new Error(\"\\n TaskSpec: no gasPriceCeil passed to constructor \\n \");\n\n    this.conditions = conditions ? conditions : [];\n    this.actions = actions;\n    this.gasPriceCeil = gasPriceCeil;\n  }\n}\n\nmodule.exports = TaskSpec;\n"]},"metadata":{},"sourceType":"script"}