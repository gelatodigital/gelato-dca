{"ast":null,"code":"var _jsxFileName = \"/Users/Hilmar/code/integrations/krystal/gelato-krystal/packages/react-app/src/pages/SubmitTask.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ethers from \"ethers\";\nimport { ViewCard, CardWrapper, Button } from \"../components\";\nimport { getVault, getUserProxy } from \"../services/stateReads\";\nimport { userProxyCast } from \"../services/stateWrites\";\nimport { addresses } from \"@project/contracts\";\nimport { submitRefinanceMakerToMaker } from \"../services/payloadGeneration\";\nconst {\n  CONNECT_GELATO_ADDR\n} = addresses;\n\nconst SubmitTask = ({\n  userAccount\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [inputs, setInputs] = useState({});\n  const [ratio, setRatio] = useState();\n  const [limit, setLimit] = useState();\n\n  const inputsUpdates = async () => {\n    const userProxy = await getUserProxy(userAccount);\n    const vA = await getVault(userAccount, userProxy, \"ETH-A\");\n    const vAId = vA !== undefined ? vA.id : 0;\n    const vB = await getVault(userAccount, userProxy, \"ETH-B\");\n    const vBId = vB !== undefined ? vB.id : 0;\n    setInputs({ ...inputs,\n      vaultAId: vAId,\n      vaultBId: vBId,\n      defaultValue: 0\n    });\n  };\n\n  const handleRatioChange = async event => {\n    const newValue = event.target.value;\n    setRatio(newValue);\n  };\n\n  const handleLimitChange = async event => {\n    const newValue = event.target.value;\n    setLimit(newValue);\n  };\n\n  const submit = async () => {\n    if (ratio === 0) return;\n    if (limit === 0) return;\n    if (parseInt(inputs.vaultAId) === 0) return;\n    const data = await submitRefinanceMakerToMaker(userAccount, ethers.utils.parseUnits(String(parseFloat(ratio) / 100), 18), ethers.utils.parseUnits(String(parseFloat(limit) / 100), 18), inputs.vaultAId, inputs.vaultBId);\n    await userProxyCast([CONNECT_GELATO_ADDR], [data], userAccount, 0, 350000);\n  };\n\n  useEffect(() => {\n    inputsUpdates();\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ViewCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Maximum fee as % of Vault-A collateral you are willing to pay\"), /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      maxWidth: \"80%\"\n    },\n    type: \"number\",\n    value: ratio,\n    onChange: handleRatioChange,\n    defaultValue: inputs.defaultValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ViewCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Collateralization Ratio that should trigger the refinance as %\"), /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      maxWidth: \"80%\"\n    },\n    type: \"number\",\n    value: limit,\n    onChange: handleLimitChange,\n    defaultValue: inputs.defaultValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ViewCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, !loading && /*#__PURE__*/React.createElement(Button, {\n    onClick: async () => {\n      setLoading(true);\n\n      try {\n        await submit();\n        setLoading(false);\n      } catch {\n        setLoading(false);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Submit Task\"), loading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 23\n    }\n  }, \"waiting...\"))));\n};\n\nexport default SubmitTask;","map":{"version":3,"sources":["/Users/Hilmar/code/integrations/krystal/gelato-krystal/packages/react-app/src/pages/SubmitTask.js"],"names":["React","useState","useEffect","ethers","ViewCard","CardWrapper","Button","getVault","getUserProxy","userProxyCast","addresses","submitRefinanceMakerToMaker","CONNECT_GELATO_ADDR","SubmitTask","userAccount","loading","setLoading","inputs","setInputs","ratio","setRatio","limit","setLimit","inputsUpdates","userProxy","vA","vAId","undefined","id","vB","vBId","vaultAId","vaultBId","defaultValue","handleRatioChange","event","newValue","target","value","handleLimitChange","submit","parseInt","data","utils","parseUnits","String","parseFloat","margin","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ethers from \"ethers\";\nimport { ViewCard, CardWrapper, Button } from \"../components\";\nimport { getVault, getUserProxy } from \"../services/stateReads\";\nimport { userProxyCast } from \"../services/stateWrites\";\nimport { addresses } from \"@project/contracts\";\nimport { submitRefinanceMakerToMaker } from \"../services/payloadGeneration\";\nconst { CONNECT_GELATO_ADDR } = addresses;\n\nconst SubmitTask = ({ userAccount }) => {\n  const [loading, setLoading] = useState(false);\n  const [inputs, setInputs] = useState({});\n  const [ratio, setRatio] = useState();\n  const [limit, setLimit] = useState();\n\n  const inputsUpdates = async () => {\n    const userProxy = await getUserProxy(userAccount);\n    const vA = await getVault(userAccount, userProxy, \"ETH-A\");\n    const vAId = vA !== undefined ? vA.id : 0;\n    const vB = await getVault(userAccount, userProxy, \"ETH-B\");\n    const vBId = vB !== undefined ? vB.id : 0;\n\n    setInputs({\n      ...inputs,\n      vaultAId: vAId,\n      vaultBId: vBId,\n      defaultValue: 0,\n    });\n  };\n\n  const handleRatioChange = async (event) => {\n    const newValue = event.target.value;\n    setRatio(newValue);\n  };\n\n  const handleLimitChange = async (event) => {\n    const newValue = event.target.value;\n    setLimit(newValue);\n  };\n\n  const submit = async () => {\n    if (ratio === 0) return;\n    if (limit === 0) return;\n    if (parseInt(inputs.vaultAId) === 0) return;\n\n    const data = await submitRefinanceMakerToMaker(\n      userAccount,\n      ethers.utils.parseUnits(String(parseFloat(ratio) / 100), 18),\n      ethers.utils.parseUnits(String(parseFloat(limit) / 100), 18),\n      inputs.vaultAId,\n      inputs.vaultBId\n    );\n\n    await userProxyCast([CONNECT_GELATO_ADDR], [data], userAccount, 0, 350000);\n  };\n\n  useEffect(() => {\n    inputsUpdates();\n  });\n\n  return (\n    <>\n      <CardWrapper>\n        <ViewCard>\n          <label style={{ margin: \"10px\" }}>\n            Maximum fee as % of Vault-A collateral you are willing to pay\n          </label>\n\n          <input\n            style={{ maxWidth: \"80%\" }}\n            type=\"number\"\n            value={ratio}\n            onChange={handleRatioChange}\n            defaultValue={inputs.defaultValue}\n          />\n        </ViewCard>\n\n        <ViewCard>\n          <label style={{ margin: \"10px\" }}>\n            Collateralization Ratio that should trigger the refinance as %\n          </label>\n\n          <input\n            style={{ maxWidth: \"80%\" }}\n            type=\"number\"\n            value={limit}\n            onChange={handleLimitChange}\n            defaultValue={inputs.defaultValue}\n          />\n        </ViewCard>\n\n        <ViewCard>\n          {!loading && (\n            <Button\n              onClick={async () => {\n                setLoading(true);\n                try {\n                  await submit();\n                  setLoading(false);\n                } catch {\n                  setLoading(false);\n                }\n              }}\n            >\n              Submit Task\n            </Button>\n          )}\n          {loading && <p>waiting...</p>}\n        </ViewCard>\n      </CardWrapper>\n    </>\n  );\n};\n\nexport default SubmitTask;\n"]},"metadata":{},"sourceType":"module"}