{"ast":null,"code":"var _jsxFileName = \"/Users/Hilmar/code/integrations/krystal/gelato-krystal/packages/react-app/src/pages/DeployProxy.js\";\nimport React, { useState } from \"react\";\nimport { CardWrapper, Button } from \"../components\";\nimport { deployProxyAction } from \"../services/stateWrites\";\n\nconst DeployProxy = ({\n  userAccount,\n  setHasProxy\n}) => {\n  const [loading, setLoading] = useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, !loading && /*#__PURE__*/React.createElement(Button, {\n    onClick: async () => {\n      setLoading(true);\n\n      try {\n        await deployProxyAction(userAccount);\n        setLoading(false);\n        setHasProxy(true);\n      } catch (error) {\n        setLoading(false);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, \"Deploy Proxy\"), loading && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"#4299e1\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, \"waiting...\")));\n};\n\nexport default DeployProxy;","map":{"version":3,"sources":["/Users/Hilmar/code/integrations/krystal/gelato-krystal/packages/react-app/src/pages/DeployProxy.js"],"names":["React","useState","CardWrapper","Button","deployProxyAction","DeployProxy","userAccount","setHasProxy","loading","setLoading","error","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,MAAtB,QAAoC,eAApC;AAEA,SAASC,iBAAT,QAAkC,yBAAlC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAAkC;AACpD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AAEA,sBACE,uDACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACO,OAAD,iBACC,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,YAAY;AACnBC,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAI;AACF,cAAML,iBAAiB,CAACE,WAAD,CAAvB;AACAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD,OAJD,CAIE,OAAOG,KAAP,EAAc;AACdD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAiBGD,OAAO,iBAAI;AAAG,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAE;AAAT,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBd,CADF,CADF;AAuBD,CA1BD;;AA4BA,eAAeN,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { CardWrapper, Button } from \"../components\";\n\nimport { deployProxyAction } from \"../services/stateWrites\";\n\nconst DeployProxy = ({ userAccount, setHasProxy }) => {\n  const [loading, setLoading] = useState(false);\n\n  return (\n    <>\n      <CardWrapper>\n        {!loading && (\n          <Button\n            onClick={async () => {\n              setLoading(true);\n              try {\n                await deployProxyAction(userAccount);\n                setLoading(false);\n                setHasProxy(true);\n              } catch (error) {\n                setLoading(false);\n              }\n            }}\n          >\n            Deploy Proxy\n          </Button>\n        )}\n        {loading && <p style={{ color: \"#4299e1\" }}>waiting...</p>}\n      </CardWrapper>\n    </>\n  );\n};\n\nexport default DeployProxy;\n"]},"metadata":{},"sourceType":"module"}