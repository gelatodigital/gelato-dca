{"ast":null,"code":"const {\n  constants\n} = require(\"ethers\");\n\nconst checkTaskMembers = require(\"../../helpers/gelato/checkTaskMembers\");\n\nclass TaskReceipt {\n  constructor({\n    id,\n    userProxy,\n    provider,\n    index,\n    tasks,\n    expiryDate,\n    cycleId,\n    submissionsLeft\n  }) {\n    if (userProxy === undefined) throw new Error(\"TaskReceipt: no userProxy\");\n    if (!provider) throw new Error(\"TaskReceipt: no provider\\n\");\n    if (!tasks || !Array.isArray(tasks)) throw new Error(\"\\nTask: tasks must be Array\\n\");\n    if (!tasks.length) throw new Error(\"\\nTask: tasks be non-empty Array\\n\");\n\n    for (const task of tasks) checkTaskMembers(task);\n\n    this.id = id !== undefined ? id : constants.Zero;\n    this.userProxy = userProxy;\n    this.provider = provider;\n    this.index = index === undefined ? constants.Zero : index;\n    this.tasks = tasks ? tasks : [];\n    this.expiryDate = expiryDate !== undefined ? expiryDate : constants.Zero;\n    this.cycleId = cycleId !== undefined ? cycleId : constants.Zero;\n    this.submissionsLeft = submissionsLeft === undefined ? 1 : submissionsLeft;\n  }\n\n}\n\nmodule.exports = TaskReceipt;","map":{"version":3,"sources":["/Users/Hilmar/code/integrations/krystal/gelato-krystal/node_modules/@gelatonetwork/core/src/classes/gelato/TaskReceipt.js"],"names":["constants","require","checkTaskMembers","TaskReceipt","constructor","id","userProxy","provider","index","tasks","expiryDate","cycleId","submissionsLeft","undefined","Error","Array","isArray","length","task","Zero","module","exports"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAgBC,OAAO,CAAC,QAAD,CAA7B;;AAEA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,uCAAD,CAAhC;;AAEA,MAAME,WAAN,CAAkB;AAChBC,EAAAA,WAAW,CAAC;AACVC,IAAAA,EADU;AAEVC,IAAAA,SAFU;AAGVC,IAAAA,QAHU;AAIVC,IAAAA,KAJU;AAKVC,IAAAA,KALU;AAMVC,IAAAA,UANU;AAOVC,IAAAA,OAPU;AAQVC,IAAAA;AARU,GAAD,EASR;AACD,QAAIN,SAAS,KAAKO,SAAlB,EAA6B,MAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AAC7B,QAAI,CAACP,QAAL,EAAe,MAAM,IAAIO,KAAJ,CAAU,4BAAV,CAAN;AACf,QAAI,CAACL,KAAD,IAAU,CAACM,KAAK,CAACC,OAAN,CAAcP,KAAd,CAAf,EACE,MAAM,IAAIK,KAAJ,CAAU,+BAAV,CAAN;AACF,QAAI,CAACL,KAAK,CAACQ,MAAX,EAAmB,MAAM,IAAIH,KAAJ,CAAU,oCAAV,CAAN;;AACnB,SAAK,MAAMI,IAAX,IAAmBT,KAAnB,EAA0BP,gBAAgB,CAACgB,IAAD,CAAhB;;AAE1B,SAAKb,EAAL,GAAUA,EAAE,KAAKQ,SAAP,GAAmBR,EAAnB,GAAwBL,SAAS,CAACmB,IAA5C;AACA,SAAKb,SAAL,GAAiBA,SAAjB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,KAAL,GAAaA,KAAK,KAAKK,SAAV,GAAsBb,SAAS,CAACmB,IAAhC,GAAuCX,KAApD;AACA,SAAKC,KAAL,GAAaA,KAAK,GAAGA,KAAH,GAAW,EAA7B;AACA,SAAKC,UAAL,GAAkBA,UAAU,KAAKG,SAAf,GAA2BH,UAA3B,GAAwCV,SAAS,CAACmB,IAApE;AACA,SAAKR,OAAL,GAAeA,OAAO,KAAKE,SAAZ,GAAwBF,OAAxB,GAAkCX,SAAS,CAACmB,IAA3D;AACA,SAAKP,eAAL,GAAuBA,eAAe,KAAKC,SAApB,GAAgC,CAAhC,GAAoCD,eAA3D;AACD;;AA1Be;;AA6BlBQ,MAAM,CAACC,OAAP,GAAiBlB,WAAjB","sourcesContent":["const { constants } = require(\"ethers\");\n\nconst checkTaskMembers = require(\"../../helpers/gelato/checkTaskMembers\");\n\nclass TaskReceipt {\n  constructor({\n    id,\n    userProxy,\n    provider,\n    index,\n    tasks,\n    expiryDate,\n    cycleId,\n    submissionsLeft,\n  }) {\n    if (userProxy === undefined) throw new Error(\"TaskReceipt: no userProxy\");\n    if (!provider) throw new Error(\"TaskReceipt: no provider\\n\");\n    if (!tasks || !Array.isArray(tasks))\n      throw new Error(\"\\nTask: tasks must be Array\\n\");\n    if (!tasks.length) throw new Error(\"\\nTask: tasks be non-empty Array\\n\");\n    for (const task of tasks) checkTaskMembers(task);\n\n    this.id = id !== undefined ? id : constants.Zero;\n    this.userProxy = userProxy;\n    this.provider = provider;\n    this.index = index === undefined ? constants.Zero : index;\n    this.tasks = tasks ? tasks : [];\n    this.expiryDate = expiryDate !== undefined ? expiryDate : constants.Zero;\n    this.cycleId = cycleId !== undefined ? cycleId : constants.Zero;\n    this.submissionsLeft = submissionsLeft === undefined ? 1 : submissionsLeft;\n  }\n}\n\nmodule.exports = TaskReceipt;\n"]},"metadata":{},"sourceType":"script"}