{"ast":null,"code":"var _jsxFileName = \"/Users/Hilmar/code/integrations/krystal/gelato-krystal/packages/react-app/src/pages/SubmitTask.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { ethers, BigNumber } from \"ethers\";\nimport { ViewCard, CardWrapper, Button } from \"../components\";\nimport { submitOrder, approveToken } from \"../services/stateWrites\";\nimport { addresses } from \"@gelato-krystal/contracts\";\nconst {\n  DAI,\n  WETH\n} = addresses;\n\nconst SubmitTask = ({\n  userAccount\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [inputs, setInputs] = useState({});\n  const [totalAmount, setTotalAmount] = useState(30);\n  const [intervalSeconds, setIntervalSeconds] = useState(120);\n  const [tradeNum, setTradeNum] = useState(3);\n  const [notApproved, setNotApproved] = useState(true);\n\n  const handleTotalAmountChange = async event => {\n    const newValue = event.target.value;\n    setTotalAmount(newValue);\n  };\n\n  const handleIntervalSecondsChange = async event => {\n    const newValue = event.target.value;\n    setIntervalSeconds(newValue);\n  };\n\n  const handleTradeNumChange = async event => {\n    const newValue = event.target.value;\n    setTradeNum(newValue);\n  };\n\n  const submit = async () => {\n    if (totalAmount === 0) {\n      console.log(\"Insufficient total amount\");\n      return;\n    }\n\n    if (intervalSeconds === 0) {\n      console.log(\"0 Interval seconds not allowed\");\n      return;\n    }\n\n    if (parseInt(inputs.tradeNum) > 10) {\n      console.log(\"Max Trade Number is 10\");\n      return;\n    }\n\n    await submitOrder(userAccount, DAI, WETH, intervalSeconds, ethers.utils.parseUnits(totalAmount, \"18\").div(BigNumber.from(tradeNum)), tradeNum);\n  };\n\n  const approve = async () => {\n    if (totalAmount === 0) {\n      console.log(\"Insufficient total amount\");\n      return;\n    }\n\n    await approveToken(userAccount, DAI, ethers.utils.parseUnits(totalAmount, \"18\"));\n  }; // useEffect(() => {\n  //   inputsUpdates();\n  // });\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ViewCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Total Amount of DAI to sell for WETH\"), /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      maxWidth: \"80%\"\n    },\n    type: \"number\",\n    value: totalAmount,\n    onChange: handleTotalAmountChange,\n    defaultValue: inputs.defaultValueAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ViewCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Interval between each trade (in seconds)\"), /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      maxWidth: \"80%\"\n    },\n    type: \"number\",\n    value: intervalSeconds,\n    onChange: handleIntervalSecondsChange,\n    defaultValue: inputs.defaultValueInterval,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ViewCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Number of trades to split the total amount up\"), /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      maxWidth: \"80%\"\n    },\n    type: \"number\",\n    value: tradeNum,\n    onChange: handleTradeNumChange,\n    defaultValue: inputs.defaultValueTradeNum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(CardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ViewCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, `Approve ${parseFloat(totalAmount).toFixed(3)} DAI`), !loading && notApproved && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: async () => {\n      setLoading(true);\n\n      try {\n        await approve();\n        setNotApproved(false);\n        setLoading(false);\n      } catch {\n        setLoading(false);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, `Approve`)), loading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 23\n    }\n  }, \"waiting...\")), /*#__PURE__*/React.createElement(ViewCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, `Execute ${tradeNum} trades, each worth ${parseFloat(totalAmount / tradeNum).toFixed(3)} DAI`), !loading && !notApproved && /*#__PURE__*/React.createElement(Button, {\n    disabled: notApproved,\n    onClick: async () => {\n      setLoading(true);\n\n      try {\n        await submit();\n        setLoading(false);\n      } catch {\n        setLoading(false);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, `Submit Task`), loading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 23\n    }\n  }, \"waiting...\"))));\n};\n\nexport default SubmitTask;","map":{"version":3,"sources":["/Users/Hilmar/code/integrations/krystal/gelato-krystal/packages/react-app/src/pages/SubmitTask.js"],"names":["React","useState","useEffect","ethers","BigNumber","ViewCard","CardWrapper","Button","submitOrder","approveToken","addresses","DAI","WETH","SubmitTask","userAccount","loading","setLoading","inputs","setInputs","totalAmount","setTotalAmount","intervalSeconds","setIntervalSeconds","tradeNum","setTradeNum","notApproved","setNotApproved","handleTotalAmountChange","event","newValue","target","value","handleIntervalSecondsChange","handleTradeNumChange","submit","console","log","parseInt","utils","parseUnits","div","from","approve","margin","maxWidth","defaultValueAmount","defaultValueInterval","defaultValueTradeNum","parseFloat","toFixed"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ethers, BigNumber } from \"ethers\";\nimport { ViewCard, CardWrapper, Button } from \"../components\";\nimport { submitOrder, approveToken } from \"../services/stateWrites\";\nimport { addresses } from \"@gelato-krystal/contracts\";\nconst { DAI, WETH } = addresses;\n\nconst SubmitTask = ({ userAccount }) => {\n  const [loading, setLoading] = useState(false);\n  const [inputs, setInputs] = useState({});\n  const [totalAmount, setTotalAmount] = useState(30);\n  const [intervalSeconds, setIntervalSeconds] = useState(120);\n  const [tradeNum, setTradeNum] = useState(3);\n  const [notApproved, setNotApproved] = useState(true);\n\n  const handleTotalAmountChange = async (event) => {\n    const newValue = event.target.value;\n    setTotalAmount(newValue);\n  };\n\n  const handleIntervalSecondsChange = async (event) => {\n    const newValue = event.target.value;\n    setIntervalSeconds(newValue);\n  };\n\n  const handleTradeNumChange = async (event) => {\n    const newValue = event.target.value;\n    setTradeNum(newValue);\n  };\n\n  const submit = async () => {\n    if (totalAmount === 0) {\n      console.log(\"Insufficient total amount\");\n      return;\n    }\n\n    if (intervalSeconds === 0) {\n      console.log(\"0 Interval seconds not allowed\");\n      return;\n    }\n    if (parseInt(inputs.tradeNum) > 10) {\n      console.log(\"Max Trade Number is 10\");\n      return;\n    }\n\n    await submitOrder(\n      userAccount,\n      DAI,\n      WETH,\n      intervalSeconds,\n      ethers.utils.parseUnits(totalAmount, \"18\").div(BigNumber.from(tradeNum)),\n      tradeNum\n    );\n  };\n\n  const approve = async () => {\n    if (totalAmount === 0) {\n      console.log(\"Insufficient total amount\");\n      return;\n    }\n\n    await approveToken(\n      userAccount,\n      DAI,\n      ethers.utils.parseUnits(totalAmount, \"18\")\n    );\n  };\n\n  // useEffect(() => {\n  //   inputsUpdates();\n  // });\n\n  return (\n    <>\n      <CardWrapper>\n        <ViewCard>\n          <label style={{ margin: \"10px\" }}>\n            Total Amount of DAI to sell for WETH\n          </label>\n\n          <input\n            style={{ maxWidth: \"80%\" }}\n            type=\"number\"\n            value={totalAmount}\n            onChange={handleTotalAmountChange}\n            defaultValue={inputs.defaultValueAmount}\n          />\n        </ViewCard>\n\n        <ViewCard>\n          <label style={{ margin: \"10px\" }}>\n            Interval between each trade (in seconds)\n          </label>\n\n          <input\n            style={{ maxWidth: \"80%\" }}\n            type=\"number\"\n            value={intervalSeconds}\n            onChange={handleIntervalSecondsChange}\n            defaultValue={inputs.defaultValueInterval}\n          />\n        </ViewCard>\n\n        <ViewCard>\n          <label style={{ margin: \"10px\" }}>\n            Number of trades to split the total amount up\n          </label>\n\n          <input\n            style={{ maxWidth: \"80%\" }}\n            type=\"number\"\n            value={tradeNum}\n            onChange={handleTradeNumChange}\n            defaultValue={inputs.defaultValueTradeNum}\n          />\n        </ViewCard>\n      </CardWrapper>\n      <CardWrapper>\n        <ViewCard>\n          <label style={{ margin: \"10px\" }}>\n            {`Approve ${parseFloat(totalAmount).toFixed(3)} DAI`}\n          </label>\n          {!loading && notApproved && (\n            <>\n              <Button\n                onClick={async () => {\n                  setLoading(true);\n                  try {\n                    await approve();\n                    setNotApproved(false);\n                    setLoading(false);\n                  } catch {\n                    setLoading(false);\n                  }\n                }}\n              >\n                {`Approve`}\n              </Button>\n            </>\n          )}\n          {loading && <p>waiting...</p>}\n        </ViewCard>\n        <ViewCard>\n          <label style={{ margin: \"10px\" }}>\n            {`Execute ${tradeNum} trades, each worth ${parseFloat(\n              totalAmount / tradeNum\n            ).toFixed(3)} DAI`}\n          </label>\n          {!loading && !notApproved && (\n            <Button\n              disabled={notApproved}\n              onClick={async () => {\n                setLoading(true);\n                try {\n                  await submit();\n                  setLoading(false);\n                } catch {\n                  setLoading(false);\n                }\n              }}\n            >\n              {`Submit Task`}\n            </Button>\n          )}\n          {loading && <p>waiting...</p>}\n        </ViewCard>\n      </CardWrapper>\n    </>\n  );\n};\n\nexport default SubmitTask;\n"]},"metadata":{},"sourceType":"module"}